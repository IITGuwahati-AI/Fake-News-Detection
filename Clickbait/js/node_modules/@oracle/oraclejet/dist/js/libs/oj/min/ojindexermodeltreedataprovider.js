/**
 * @license
 * Copyright (c) 2014, 2019, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 */
"use strict";define(["ojs/ojcore","jquery","ojs/ojarraytreedataprovider","ojs/ojindexer"],function(t,e,i){var r=function(t,e){this.data=t,this.options=e,this._init()};return t.IndexerModelTreeDataProvider=r,r.prototype._init=function(){var e=this.options.sections;if(null==e){var i=t.Translations.getTranslatedString("oj-ojIndexer.indexerCharacters");e=i.split("|")}e.push(t.IndexerModel.SECTION_OTHERS);var r,s=this.options.groupingStrategy;if(null==s){var o=this.options.groupingAttribute;s=function(i){var r=(i[o]?i[o]:i).toString().toUpperCase()[0];return e.indexOf(r)>-1?r:t.IndexerModel.SECTION_OTHERS}}this.data=this.data.sort(function(t,i){var r=s(t),o=s(i);return e.indexOf(r)-e.indexOf(o)});for(var n=0;n<this.data.length;n++){var a=s(this.data[n]);r!==a&&(r=a,this._set(a,n))}this.sections=e;var h=this;function p(){var e=h.sections.filter(function(t){return null!=h._get(t)});t.ArrayTreeDataProvider.call(this,e,{})}p.prototype=Object.create(t.ArrayTreeDataProvider.prototype),p.prototype._getId=function(t){return t},this.baseDataProvider=new p},r.prototype._set=function(t,e){null==this.pos&&(this.pos=[]),this.pos.push({key:t,value:e})},r.prototype._get=function(t){for(var e=0;e<this.pos.length;e++)if(this.pos[e].key===t)return this.pos[e].value;return null},r.prototype.getIndexableSections=function(){return this.sections.slice(0,this.sections.length-1)},r.prototype.getMissingSections=function(){if(null==this.missing){for(var t=[],e=0;e<this.sections.length-1;e++){var i=this.sections[e];null==this._get(i)&&t.push(i)}this.missing=t}return this.missing},r.prototype.setSection=function(t){return this.options.sectionChangeHandler?this.options.sectionChangeHandler.call(this,t):Promise.resolve(t)},r.prototype.getChildDataProvider=function(e){if(null===e)return this.baseDataProvider;var i=this.sections.indexOf(e);if(i>-1){var r,s=this._get(e);if(null!=s)if(i===this.sections.length-1)r=this.data.slice(s);else{i+=1;for(var o=this.sections[i],n=this._get(o);null==n&&i<this.sections.length;)i+=1,o=this.sections[i],n=this._get(o);(isNaN(n)||null==n)&&(n=this.data.length),r=this.data.slice(s,n)}else r=[];return new t.ArrayTreeDataProvider(r,{keyAttributes:this.options.keyAttributes,sortComparators:this.options.sortComparators,implicitSort:this.options.implicitSort})}return null},r.prototype.getCapability=function(t){return this.baseDataProvider.getCapability(t)},r.prototype.getTotalSize=function(){return this.baseDataProvider.getTotalSize()},r.prototype.containsKeys=function(t){return this.baseDataProvider.containsKeys(t)},r.prototype.fetchByKeys=function(t){return this.baseDataProvider.fetchByKeys(t)},r.prototype.fetchByOffset=function(t){return this.baseDataProvider.fetchByOffset(t)},r.prototype.fetchFirst=function(t){return this.baseDataProvider.fetchFirst(t)},r.prototype.isEmpty=function(){return this.baseDataProvider.isEmpty()},r.prototype.addEventListener=function(t,e){this.baseDataProvider.addEventListener(t,e)},r.prototype.removeEventListener=function(t,e){this.baseDataProvider.removeEventListener(t,e)},r.prototype.dispatchEvent=function(t){return this.baseDataProvider.dispatchEvent(t)},r});