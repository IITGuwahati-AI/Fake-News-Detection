define(["./defaultCacheHandler","../persistenceStoreManager","./logger"],function(a,b,c){"use strict";function d(a,b){if(!a)throw TypeError("A name must be provided to create an OfflineCache!");if(!b)throw TypeError("A persistence store must be provided to create an OfflineCache!");this._name=a,this._storeName=b,this._store=null}function e(a,b,c){if(c&&c.length)for(var d=0;d<c.length;d++){var e=c[d];if(h(a,b,e))return e.responseData}return null}function f(a,b,c){var d=[];if(c&&c.length){var e=c.filter(g(a,b));d=e.map(function(a){return a.responseData})}return d}function g(a,b,c){return function(d){var e;return e=c?d[c]:d,h(a,b,e)}}function h(a,b,d){if(a)return!0;if(!d||!b)return!1;var e=d.requestData.headers,f=d.responseData.headers,g=b.headers,h=f.vary;if(c.log("Offline Persistence Toolkit OfflineCache: Processing HTTP Vary header"),!h)return!0;if("*"===h.trim())return!1;for(var i=h.split(","),j=0;j<i.length;j++){var k=i[j].toLowerCase();k=k.trim();var l=g.get(k),m=e[k];if(c.log("Offline Persistence Toolkit OfflineCache: HTTP Vary header name: "+k),c.log("Offline Persistence Toolkit OfflineCache: Request HTTP Vary header value: "+l),c.log("Offline Persistence Toolkit OfflineCache: Cached HTTP Vary header value: "+m),!(!m&&!l||m&&l&&m===l))return!1}return!0}function i(b){if(b){c.log("Offline Persistence Toolkit OfflineCache: Converting cached entry to Response object");var d=[],e=b.bodyAbstract;return e?(d.push(Promise.resolve(JSON.parse(e))),delete b.bodyAbstract):d.push(Promise.resolve()),d.push(a.constructResponse(b)),Promise.all(d)}return Promise.resolve()}function j(a){if(a&&a.length){var b=a.map(function(a){return i(a)});return Promise.all(b)}return Promise.resolve()}function k(a){var b=a.map(function(a){return{name:a.name,keys:a.keys?a.keys.reduce(function(a,b){return b?a.push(b.toString()):c.warn("should not have undefined key in the shredded data"),a},[]):a.keys,resourceType:a.resourceType}});return JSON.stringify(b)}return d.prototype.getName=function(){return this._name},d.prototype.add=function(a){c.log("Offline Persistence Toolkit OfflineCache: add()");var b=this;return fetch(a).then(function(c){var d=c.clone();return b.put(a,c).then(function(){Promise.resolve(d)})})},d.prototype.addAll=function(a){c.log("Offline Persistence Toolkit OfflineCache: addAll()");var b=a.map(this.add,this);return Promise.all(b)},d.prototype.match=function(b,d){c.log("Offline Persistence Toolkit OfflineCache: match() for Request with url: "+b.url);var f=this,g=a.constructSearchCriteria(b,d),h=d&&d.ignoreVary;return f._getStore().then(function(a){return a.find(g)}).then(function(a){var c=e(h,b,a);return i(c)}).then(function(c){if(c){var d=c[0],e=c[1];return a.fillResponseBodyWithShreddedData(b,d,e)}return Promise.resolve()})},d.prototype.matchAll=function(b,d){c.log("Offline Persistence Toolkit OfflineCache: matchAll() for Request with url: "+b.url);var e=this,g=a.constructSearchCriteria(b,d),h=d&&d.ignoreVary;return e._getStore().then(function(a){return a.find(g)}).then(function(a){var c=f(h,b,a);return j(c)}).then(function(c){if(c&&c.length){var d=c.map(function(c){var d=c[0],e=c[1];return a.fillResponseBodyWithShreddedData(b,d,e)});return Promise.all(d)}return Promise.resolve([])})},d.prototype._getStore=function(){var a=this;return a._store?Promise.resolve(a._store):b.openStore(a._storeName).then(function(b){return a._store=b,a._store})},d.prototype.put=function(b,d){c.log("Offline Persistence Toolkit OfflineCache: put() for Request with url: "+b.url);var e=this,f=[];return f.push(a.constructRequestResponseCacheData(b,d)),f.push(a.shredResponse(b,d)),Promise.all(f).then(function(b){return e._getStore().then(function(c){var d=b[0],e=b[1];if(e){var f=[];return d.value.responseData.bodyAbstract=k(e),f.push(c.upsert(d.key,d.metadata,d.value)),f.push(a.cacheShreddedData(e)),Promise.all(f)}return c.upsert(d.key,d.metadata,d.value)})})},d.prototype.delete=function(a,b){a?c.log("Offline Persistence Toolkit OfflineCache: delete() for Request with url: "+a.url):c.log("Offline Persistence Toolkit OfflineCache: delete()");var d=this;return d.keys(a,b).then(function(a){return d._getStore().then(function(b){if(a&&a.length){var c=a.map(b.removeByKey,b);return Promise.all(c)}return!1})}).then(function(a){return!(!a||!a.length)})},d.prototype.keys=function(b,d){b?c.log("Offline Persistence Toolkit OfflineCache: keys() for Request with url: "+b.url):c.log("Offline Persistence Toolkit OfflineCache: keys()");var e=this;return e._getStore().then(function(c){if(b){var e=a.constructSearchCriteria(b,d);e.fields=["key","value"];var f=d&&d.ignoreVary;return c.find(e).then(function(a){if(a&&a.length){var c=a.filter(g(f,b,"value")),d=c.map(function(a){return a.key});return d}return[]})}return c.keys()})},d.prototype.hasMatch=function(b,d){c.log("Offline Persistence Toolkit OfflineCache: hasMatch() for Request with url: "+b.url);var f=this,g=a.constructSearchCriteria(b,d),h=d&&d.ignoreVary;return f._getStore().then(function(a){return a.find(g).then(function(a){var c=e(h,b,a);return null!==c})})},d});