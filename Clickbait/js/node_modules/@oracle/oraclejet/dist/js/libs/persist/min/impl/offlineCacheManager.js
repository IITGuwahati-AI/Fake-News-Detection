define(["./OfflineCache","./logger"],function(a,b){"use strict";function c(){this._prefix="offlineCaches-",this._caches={},this._cachesArray=[]}return c.prototype.open=function(c){b.log("Offline Persistence Toolkit OfflineCacheManager: open() with name: "+c);var d=this._caches[c];return d||(d=new a(c,this._prefix+c),this._caches[c]=d,this._cachesArray.push(d)),d},c.prototype.match=function(a,c){b.log("Offline Persistence Toolkit OfflineCacheManager: match() for Request with url: "+a.url);var d=this,e=function(b,d){if(d===b.length)return Promise.resolve();var f=b[d];return f.match(a,c).then(function(a){return a?a.clone():e(b,d+1)})};return e(d._cachesArray,0)},c.prototype.has=function(a){return b.log("Offline Persistence Toolkit OfflineCacheManager: has() for name: "+a),this._caches[a]?Promise.resolve(!0):Promise.resolve(!1)},c.prototype.delete=function(a){b.log("Offline Persistence Toolkit OfflineCacheManager: delete() for name: "+a);var c=this,d=c._caches[a];return d?d.delete().then(function(){return c._cachesArray.splice(c._cachesArray.indexOf(a),1),delete c._caches[a],!0}):Promise.resolve(!1)},c.prototype.keys=function(){b.log("Offline Persistence Toolkit OfflineCacheManager: keys()");for(var a=[],c=0;c<this._cachesArray.length;c++)a.push(this._cachesArray[c].getName());return Promise.resolve(a)},new c});