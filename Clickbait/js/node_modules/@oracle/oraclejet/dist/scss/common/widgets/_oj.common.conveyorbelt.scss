// Copyright (c) 2014, 2019, Oracle and/or its affiliates. The Universal Permissive License (UPL), Version 1.0
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// WARNING: do not directly import this file, instead import the 
//          version in your base theme's directory, 
//          for example alta/widgets/_oj.alta.conveyorbelt.scss
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

@import "../../utilities/oj.utilities";


@if $includeConveyorBeltClasses != false {
  @include module-include-once("common.conveyorbelt") {
    
    /* conveyorbelt */
    /* --------------------------------------------------------------- */
    
    // This is to prevent the flash of unstyled content before the html becomes JET components.
    @if $initialVisibility == hidden {
      oj-conveyor-belt:not(.oj-complete) {
        visibility: hidden;
      }      
    }
    
    oj-conveyor-belt {
        display: block;
    }
    
    .oj-conveyorbelt {
        position: relative;
    }
    
    .oj-conveyorbelt,
    .oj-conveyorbelt-overflow-container,
    .oj-conveyorbelt-content-container {
        display: flex;
        align-items: center;
    }
    
    //oj-conveyorbelt-vertical is applied to the root element when the
    //conveyor orientation is vertical
    .oj-conveyorbelt.oj-conveyorbelt-vertical {
        display: inline-flex;
    }
    
    .oj-conveyorbelt.oj-conveyorbelt-vertical,
    .oj-conveyorbelt.oj-conveyorbelt-vertical > .oj-conveyorbelt-overflow-container,
    .oj-conveyorbelt.oj-conveyorbelt-vertical > .oj-conveyorbelt-overflow-container > .oj-conveyorbelt-content-container {
        flex-direction: column;
    }
    
    //applied to the container around the content container in the conveyor
    .oj-conveyorbelt-overflow-container {
        overflow: hidden;
        flex: 1 1 auto;
    }
    
    //applied to the container around the items in the conveyor
    .oj-conveyorbelt-content-container {
        //need to specify position:relative so that we can add a resize listener to this element
        //(which adds its own absolutely positioned child elements)
        position: relative;
        //when a navList is wrapped by a conveyorBelt, allow the navList to
        //grow so that its items can grow, like a navList not wrapped by a 
        //conveyorBelt
        flex: 1 0 auto;
    }
    
    //applied to each item in the conveyor
    .oj-conveyorbelt-item {
        flex: 0 0 auto;
    }
    
    //when a navList is wrapped by a conveyorBelt, allow the navList to
    //grow so that its items can grow, like a navList not wrapped by a 
    //conveyorBelt
    .oj-conveyorbelt-item.oj-navigationlist,
    .oj-conveyorbelt-item.oj-tabbar {
        flex: 1 0 auto;
    }
    
    /* overflow indicators */
    .oj-conveyorbelt-overflow-indicator {
        box-sizing: border-box;
        @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
        {
          width: var(--oj-conveyor-belt-overflow-indicator-height);
          height: var(--oj-conveyor-belt-overflow-indicator-height);
          //FIX BUG 19571727: specify line-height to be same as height so that
          //arrows appear vertically centered regardless of font size
          line-height: var(--oj-conveyor-belt-overflow-indicator-height);
          cursor: var(--oj-button-cursor);
          border-radius: var(--oj-button-border-radius);
        }
        @else {
          width: $conveyorBeltOverflowIndicatorHeight;
          height: $conveyorBeltOverflowIndicatorHeight;
          //FIX BUG 19571727: specify line-height to be same as height so that
          //arrows appear vertically centered regardless of font size
          line-height: $conveyorBeltOverflowIndicatorHeight;
          cursor: $buttonCursor;
          @include oj-border-radius($buttonBorderRadius);
          
        }

        text-align: center;
        border: 1px solid;
        flex: 0 0 auto;
        position: relative;
    }

    .oj-conveyorbelt-overflow-indicator.oj-default {
        border-color: transparent;
    }

    .oj-conveyorbelt-overflow-indicator.oj-hover {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        //from .oj-button.oj-hover
        background-color: var(--oj-button-half-chrome-bg-color-hover);
        background-image: var(--oj-button-bg-image-hover);
        border-color: var(--oj-button-half-chrome-border-color-hover);
      }
      @else {
        //from .oj-button.oj-hover
        background-color: $buttonHalfChromeBgColorHover;
        @include oj-background-image($buttonBgImageHover);
        border-color: $buttonHalfChromeBorderColorHover;
      }

    }

    //active should trump hover
    .oj-conveyorbelt-overflow-indicator.oj-active,
    .oj-conveyorbelt-overflow-indicator.oj-active.oj-hover {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        //from .oj-button.oj-active
        background-color: var(--oj-button-half-chrome-bg-color-active);
        background-image: var(--oj-button-bg-image-active);
        border-color: var(--oj-button-half-chrome-border-color-active);
        opacity: var(--oj-button-half-chrome-opacity-active);
      }
      @else {
        //from .oj-button.oj-active
        background-color: $buttonHalfChromeBgColorActive;
        @include oj-background-image($buttonBgImageActive);
        border-color: $buttonHalfChromeBorderColorActive;
        opacity: $buttonHalfChromeOpacityActive;
      }

    }

    
    /* overflow icons */
    .oj-conveyorbelt-overflow-indicator .oj-conveyorbelt-overflow-icon {
        // make sure that the cursor is uniform across the whole overflow indicator 
        cursor: inherit;
        //FIX BUG 19571727: align the icon vertically; add margin on bottom to
        //center it better than vertical-align by itself
        vertical-align: middle;
        margin-bottom: 3px;
    }
    
    .oj-conveyorbelt-overflow-indicator.oj-default .oj-conveyorbelt-overflow-icon {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        color: var(--oj-button-half-chrome-icon-color);
      }
      @else {
        color: $buttonHalfChromeIconColor;        
      }
    }

    .oj-conveyorbelt-overflow-indicator.oj-hover .oj-conveyorbelt-overflow-icon {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        //from .oj-button.oj-hover .oj-button-icon
        color: var(--oj-button-half-chrome-icon-color-hover);
      }
      @else {
        //from .oj-button.oj-hover .oj-button-icon
        color: $buttonHalfChromeIconColorHover;
      }
    }

    //active should trump hover
    .oj-conveyorbelt-overflow-indicator.oj-active .oj-conveyorbelt-overflow-icon,
    .oj-conveyorbelt-overflow-indicator.oj-active.oj-hover .oj-conveyorbelt-overflow-icon {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        //from .oj-button.oj-active .oj-button-icon
        color: var(--oj-button-half-chrome-icon-color-active);
      }
      @else {
        //from .oj-button.oj-active .oj-button-icon
        color: $buttonHalfChromeIconColorActive;
      }
    }


    // icons
    //------------------------------------------

    .oj-conveyorbelt-overflow-icon.oj-start {
        @extend .oj-fwk-icon-caret-start;
    }
    .oj-conveyorbelt-overflow-icon.oj-end {
        @extend .oj-fwk-icon-caret-end;
    }
    .oj-conveyorbelt-overflow-icon.oj-top {
        @extend .oj-fwk-icon-caret-n;
    }
    .oj-conveyorbelt-overflow-icon.oj-bottom {
        @extend .oj-fwk-icon-caret-s;
    }
  }
}