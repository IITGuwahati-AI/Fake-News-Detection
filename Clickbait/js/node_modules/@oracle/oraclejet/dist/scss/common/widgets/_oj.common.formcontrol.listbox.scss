// Copyright (c) 2014, 2019, Oracle and/or its affiliates. The Universal Permissive License (UPL), Version 1.0
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// WARNING: do not directly import this file, instead import the
//          version in your base theme's directory,
//          for example alta/widgets/_oj.alta.formcontrol.listbox.scss
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

@import "../../utilities/oj.utilities";
@import "oj.common.formcontrol.mixins";

@if $includeListboxClasses != false {
  @include module-include-once("common.listbox") {


    /* listbox */
    /* --------------------------------------------------------------- */


    /************************* oj-form-control-inherit OVERRIDES *************************/
    // DO NOT ADD SELECTOR DEFINITIONS BEFORE THESE OVERRIDES AS SPECIFICITY ISSUES CAN ARISE

    // The oj-form-control-inherit selector on an ancestor indicates that the form control should
    // inherit styles, like width/height/borders/colors/text-alignment, etc. This is used for
    // editable datagrid cells and editable table cells
    // -----------------------------------------------------------------------------------------

    .oj-form-control-inherit:not(.oj-form-control-default) .oj-listbox-input {
      @include oj-form-control-inherit();
    }

    /************************* END OF oj-form-control-inherit OVERRIDES *************************/


    /*
     * applied to the dropdown
     */

    /* defines the stacking context for the listbox */
    .oj-listbox-drop-layer {
      @extend .oj-component-layer;
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        z-index: var(--oj-popup-z-index);
      }
      @else {
        z-index: $popupZindex;
      }
    }

    .oj-listbox-drop {
      @extend .oj-component-popup;
      box-sizing: border-box;
      top: 100%;
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        background: var(--oj-popup-bg-color);
        border: 1px solid var(--oj-popup-border-color);
        box-shadow: var(--oj-box-shadow-sm);
      }
      @else {
        background: $popupBgColor;
        border: 1px solid $popupBorderColor;
        @include oj-box-shadow($smallBoxShadow);
      }
      border-top: 0;
    }

    /*
     * applied to the dropdown when it is open above the component
     */
    .oj-listbox-drop-above {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        border-top: 1px solid var(--oj-popup-border-color);
      }
      @else {
        border-top: 1px solid $popupBorderColor;
      }
      border-bottom: 0;
      // top border moves the div down 1 px when the listbox is displayed above
      margin-top: -1px;
    }

    /*
     * applied to placeholder in the dropdown
     */
    .oj-listbox-placeholder {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        color: var(--oj-text-field-placeholder-color);
      }
      @else {
        color: $formControlPlaceholderColor;
      }
    }

    /*
     * applied to results
     */
    .oj-listbox-results {
      max-height: 200px;
      padding: 0;
      margin: 1px 0 2px 0;
      position: relative;
      overflow-x: hidden;
      overflow-y: auto;
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    }

    /*
     * applied to nested option groups
     */
    .oj-listbox-result-sub {
      margin: 0;
      padding: 0;
    }

    /*
     * applied to result labels
     */
    .oj-listbox-result-label {
      line-height: 2rem;
      margin: 0;
      cursor: pointer;
      min-height: 2rem;
      word-wrap: break-word;
      -webkit-touch-callout: none;
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        user-select: none;
        html:not([dir="rtl"]) & {
          padding-left: var(--oj-listbox-item-padding);
        }
        html[dir="rtl"] & {
          padding-right: var(--oj-listbox-item-padding);
        }
      }
      @else {
        @include oj-user-select-property(none);
        @include oj-ltr() {
          padding-left: $listboxItemPadding;
        }
        @include oj-rtl() {
          padding-right: $listboxItemPadding;
        }
      }
    }

    /*
     * applied to result labels in different nested levels of option groups.
     * Padding is used instead of margins because the background color for states
     * like hover need to span across the entire box.
     */
    .oj-listbox-results-depth-1 > .oj-listbox-result-label {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        html:not([dir="rtl"]) & {
          padding-left: calc(var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
        html[dir="rtl"] & {
          padding-right: calc(var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
      }@else {
        @include oj-ltr() {
          padding-left: calc(#{$listboxIndentWidth} + #{$listboxItemPadding});
        }
        @include oj-rtl() {
          padding-right: calc(#{$listboxIndentWidth} + #{$listboxItemPadding});
        }
      }
    }

    .oj-listbox-results-depth-2 > .oj-listbox-result-label {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        html:not([dir="rtl"]) & {
          padding-left: calc(2 * var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
        html[dir="rtl"] & {
          padding-right: calc(2 * var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
      }@else {
        @include oj-ltr() {
          padding-left: calc(2 * #{$listboxIndentWidth} + #{$listboxItemPadding});
        }
        @include oj-rtl() {
          padding-right: calc(2 * #{$listboxIndentWidth} + #{$listboxItemPadding});
        }
      }
    }

    .oj-listbox-results-depth-3 > .oj-listbox-result-label {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        html:not([dir="rtl"]) & {
          padding-left: calc(3 * var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
        html[dir="rtl"] & {
          padding-right: calc(3 * var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
      }@else {
        @include oj-ltr() {
          padding-left: calc(3 * #{$listboxIndentWidth} + #{$listboxItemPadding});
        }
        @include oj-rtl() {
          padding-right: calc(3 * #{$listboxIndentWidth} + #{$listboxItemPadding});
        }
      }
    }

    .oj-listbox-results-depth-4 > .oj-listbox-result-label {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        html:not([dir="rtl"]) & {
          padding-left: calc(4 * var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
        html[dir="rtl"] & {
          padding-right: calc(4 * var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
      }@else {
        @include oj-ltr() {
          padding-left: calc(4 * #{$listboxIndentWidth} + #{$listboxItemPadding});
        }
        @include oj-rtl() {
          padding-right: calc(4 * #{$listboxIndentWidth} + #{$listboxItemPadding});
        }
      }
    }

    .oj-listbox-results-depth-5 > .oj-listbox-result-label {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        html:not([dir="rtl"]) & {
          padding-left: calc(5 * var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
        html[dir="rtl"] & {
          padding-right: calc(5 * var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
      }@else {
        @include oj-ltr() {
          padding-left: calc(5 * #{$listboxIndentWidth} + #{$listboxItemPadding});
        }
        @include oj-rtl() {
          padding-right: calc(5 * #{$listboxIndentWidth} + #{$listboxItemPadding});
        }
      }
    }

    .oj-listbox-results-depth-6 > .oj-listbox-result-label {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        html:not([dir="rtl"]) & {
          padding-left: calc(6 * var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
        html[dir="rtl"] & {
          padding-right: calc(6 * var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
      }@else {
        @include oj-ltr() {
          padding-left: calc(6 * #{$listboxIndentWidth} + #{$listboxItemPadding});
        }
        @include oj-rtl() {
          padding-right: calc(6 * #{$listboxIndentWidth} + #{$listboxItemPadding});
        }
      }
    }

    .oj-listbox-results-depth-7 > .oj-listbox-result-label {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        html:not([dir="rtl"]) & {
          padding-left: calc(7 * var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
        html[dir="rtl"] & {
          padding-right: calc(7 * var(--oj-listbox-indent-width) + var(--oj-listbox-item-padding));
        }
      }@else {
        @include oj-ltr() {
          padding-left: calc(7 * #{$listboxIndentWidth} + #{$listboxItemPadding});
        }
        @include oj-rtl() {
          padding-right: calc(7 * #{$listboxIndentWidth} + #{$listboxItemPadding});
        }
      }
    }

    /*
     * applied to the nested option group labels,
     * they are direct children of li.oj-listbox-result-with-children
     */
    .oj-listbox-result-with-children > .oj-listbox-result-label {
      font-weight: bold;
    }

    /*
     * applied to choices in the dropdown
     */
    .oj-listbox-results li {
      list-style: none;
      display: list-item;
      background-image: none;
    }

    /*
     * applied to the hovered choices in the dropdown
     */
    .oj-listbox-results .oj-hover {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        background: var(--oj-listbox-bg-color-focus);
      }
      @else {
        background: $listboxBgColorFocus;
      }
    }

    /*
     * applied to disabled choices in the dropdown
     */
    .oj-listbox-results .oj-disabled {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        color: var(--oj-text-color-disabled);
      }
      @else {
        color: $textColorDisabled;
      }
      display: list-item;
      cursor: default;
    }

    /*
     * applied to selected choice in the dropdown
     */
    .oj-listbox-results .oj-selected {
      display: none;
    }

    /*
     * This class is only applied transiently to measure the browser native scollbar
     */
    .oj-listbox-measure-scrollbar {
      position: absolute;
      top: -10000px;
      width: 100px;
      height: 100px;
      overflow: scroll;
      @include oj-ltr() {
        left: -10000px;
      }
      @include oj-rtl() {
        right: -10000px;
      }
    }


    /* icons */
    /* -----------------------------*/

    /*
     * Applied to the search icon
     */
    .oj-listbox-search-icon {
      @extend .oj-fwk-icon-magnifier;
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        color: var(--oj-button-icon-color);
      }
      @else {
        color: $buttonIconColor;
      }
    }

    /*
     * Applied to the spyglass (search icon) container
     */
    .oj-listbox-spyglass-box {
      box-sizing: border-box;
      text-align: center;
      vertical-align: middle;
      border:0;
      overflow: hidden;
      display: inline-block;
      position: absolute;
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        html:not([dir="rtl"]) & {
          right: 0;
          padding-right: var(--oj-listbox-item-padding);
        }
        html[dir="rtl"] & {
          left: 0;
          padding-left: var(--oj-listbox-item-padding);
        }
      }
      @else {
        @include oj-ltr() {
          right: 0;
          padding-right: $listboxItemPadding;
        }
        @include oj-rtl() {
          left: 0;
          padding-left: $listboxItemPadding;
        }
      }
    }

    /*
     * Applied to the search box which includes the search text and the spyglass icon
     */
    .oj-listbox-search {
      box-sizing: border-box;
      width: 100%;
      display: inline-table;
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        background-color: var(--oj-text-field-bg-color);
        border-color: var(--oj-text-field-border-color);
        border-width: var(--oj-text-field-border-top-width) var(--oj-text-field-border-right-width) var(--oj-text-field-border-bottom-width) var(--oj-text-field-border-left-width);
        border-radius: var(--oj-text-field-border-radius);
      }
      @else {
        background-color: $formControlBgColor;
        border-color: $formControlBorderColor;
        border-width: $formControlBorderWidth;
        @include oj-border-radius($formControlBorderRadius);
      }
      border-style: solid;
    }

    /*
     * Applied to the search text
     */
    .oj-listbox-input {
      box-sizing: border-box;
      width: 100%;
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        color: var(--oj-text-color);
        border-radius: var(--oj-text-field-border-radius);
        box-shadow: none;
        html:not([dir="rtl"]) & {
          padding-right: 2rem;
          padding-left: var(--oj-text-field-padding-horizontal);
        }
        html[dir="rtl"] & {
          padding-left: 2rem;
          padding-right: var(--oj-text-field-padding-horizontal);
        }
      }
      @else {
        color: $textColor;
        @include oj-border-radius($formControlBorderRadius);
        @include oj-box-shadow(none);
        @include oj-ltr() {
          padding-right: 2rem;
          padding-left: $formControlPaddingHorizontal;
        }
        @include oj-rtl() {
          padding-left: 2rem;
          padding-right: $formControlPaddingHorizontal;
        }
      }
      outline: none;
      border: 0;
      // even if the border is 0, we still need to set border radius here otherwise
      // the inputbox background color bleeds thru the container's corner
      // (see oj-listbox-search), which makes the container border radius
      // look disconnected.
      background-color: inherit;
      padding-top: 6px;
      padding-bottom: 5px;

     }

    /*
     * Used to cover the border bottom of the select box when the dropdown is open
     */
    .oj-listbox-search-wrapper {
      border: 0;
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        padding: var(--oj-listbox-item-padding);
        background-color: var(--oj-text-field-bg-color);
      }
      @else {
        padding: $listboxItemPadding;
        background-color: $formControlBgColor;
      }
    }

    /*
     * Applied to the "No matches found" result entry
     */
   .oj-listbox-no-results {
     @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
     {
       html:not([dir="rtl"]) & {
         padding-left: var(--oj-listbox-item-padding);
       }
       html[dir="rtl"] & {
         padding-right: var(--oj-listbox-item-padding);
       }
     }
     @else {
       @include oj-ltr() {
         padding-left: $listboxItemPadding;
       }
       @include oj-rtl() {
         padding-right: $listboxItemPadding;
       }
     }

   }

    /*
     * Applied to the filter message container
     */
    .oj-listbox-filter-message-box {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        padding-left: var(--oj-listbox-item-padding);
        padding-right: var(--oj-listbox-item-padding);
      } @else {
        padding-left: $listboxItemPadding;
        padding-right: $listboxItemPadding;
      }
    }

    /*
     * Applied to the filter message text
     */
    .oj-listbox-filter-message-text {
      line-height: 1.8rem;
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        color: var(--oj-listbox-message-text-color);
        font-size: var(--oj-font-size-sm);
        padding-top: var(--oj-listbox-item-padding);
        padding-bottom: var(--oj-listbox-item-padding);
      } @else {
        color: $listboxMessageTextColor;
        font-size: $smallFontSize;
        padding-top: $listboxItemPadding;
        padding-bottom: $listboxItemPadding;
      }
    }

    /*
     * Applied to the filter message separator
     */
    .oj-listbox-filter-message-separator {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        border-bottom: 1px solid var(--oj-popup-border-color);
      } @else {
        border-bottom: 1px solid $popupBorderColor;
      }
    }

    /*
     * Applied to the data fetching indicator container
     */
    .oj-listbox-loading-icon-container {
      display: flex;

      // center containing items
      justify-content: center;

      // vertically center containing items
      align-items: center;

      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 1;
      border-style: none;
    }

    /*
     * Applied to the data fetching indicator icon
     */
    .oj-listbox-loading-icon {
      display: inline-block;
      width: 24px;
      height: 24px;
      margin: auto;
      @include oj-icon-content(
        $icon: oj-image-url("spinner_full.gif"),
        $lowResProportion: 0.15
      );
    }


    // High Contrast
    //--------------------------------------------

    // apply to a hovered choice
    .oj-hicontrast .oj-listbox-results .oj-hover {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        border: 1px solid var(--oj-text-field-border-color);
      }
      @else {
        border: 1px solid $formControlBorderColor;
      }
    }

    // apply to a disabled choice
    .oj-hicontrast .oj-listbox-results .oj-disabled {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        border: 1px dotted var(--oj-text-field-border-color);
      }
      @else {
        border: 1px dotted $formControlBorderColor;
      }
    }

    /*
     * Applied to the search icon
     */
    .oj-listbox-search-icon {
        padding: 0.31rem;
    }

    /*
     * Applied to the spyglass (search icon) container
     */
    .oj-listbox-spyglass-box {
      padding-top: 1px;

      @include oj-ltr() {
        padding-right: 6px;
      }
      @include oj-rtl() {
        padding-left: 6px;
      }
    }

    /*
     * Applied to the listbox results if it has custonm header.
     */
    .oj-listbox-results-with-header {
      padding: 0;
      margin: 0;
    }

    /*
     * Applied to the listbox custonm header options.
     */
    .oj-listbox-results-with-header li {
      background-image: none;
      list-style: outside none none;
    }

    /*
     * Applied to the listbox custonm header.
     */
    .oj-listbox-result-header {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        padding: var(--oj-listbox-item-padding) var(--oj-listbox-item-padding) 0 var(--oj-listbox-item-padding);
      }
      @else {
        padding: $listboxItemPadding $listboxItemPadding 0 $listboxItemPadding;
      }
    }

    .oj-listbox-result-header ul {
      padding: 0;
    }

    .oj-listbox-result-header a.oj-focus {
      text-decoration: underline;
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        @include oj-browser-focus-outline-approximation-css-vars(var(--oj-button-text-color));
      }
      @else {
        @include oj-browser-focus-outline-approximation($buttonTextColor);
      }
    }

    /*
     * Applied to the matching text in the dropdown options
     */
    .oj-listbox-highlighter {
      font-weight: bold;
    }
  }
}
