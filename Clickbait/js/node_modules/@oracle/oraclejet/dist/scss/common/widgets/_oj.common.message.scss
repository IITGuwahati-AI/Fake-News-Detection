// Copyright (c) 2014, 2019, Oracle and/or its affiliates. The Universal Permissive License (UPL), Version 1.0
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// WARNING: do not directly import this file, instead import the 
//          version in your base theme's directory, 
//          for example alta/widgets/_oj.alta.message.scss
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

@import "../../utilities/oj.utilities";

@if $includeMessageClasses != false {
  @include module-include-once("common.message") {
    
    oj-message:not(.oj-complete) {
      visibility: hidden;
    }
    
    .oj-message-container {
      width:100%;
      display: inline-flex;
      flex-direction: column;
    }
    
    .oj-message-header {
      display: inline-flex;
      justify-content: space-between;
      align-items: center;
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true) {
        height: var(--oj-message-header-height);
      }
      @else {
        height: $messageHeaderHeight;  
      }      
    }
    
    .oj-message-leading-header {
      align-items: center;
      display: inline-flex;
    }
    
    .oj-message-trailing-header {
      align-items: center;
      display:inline-flex;
    }
    
    .oj-message-custom-icon {
      width: 20px;
      height: 20px;
    }
    
    .oj-message-category {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true) {
        color: var(--oj-message-category-text-color);
        font-size: var(--oj-message-category-font-size);
        font-weight: var(--oj-message-category-font-weight);
      }
      @else {
        color: $messageCategoryTextColor;
        font-size: $messageCategoryFontSize;
        font-weight: $messageCategoryFontWeight;
      }

      // category text is expected to be single word, but it could be long, like "CONFIRMATION"
      //  which could end up overlapping the timestamp in small screens, eg. small iphones.
      //  Allow most lenient wrapping between two adjacent letters to prevent this.
      word-break: break-all;
    }
    
    .oj-message-category h1 {
      // Supress general h1 overrides, and use what is in oj-message-category
      color: inherit;
      font-size: inherit;
      font-weight: inherit;
      
      // Supress the undesirable 8px margin and 2px bottom padding in generic h1
      margin: 0px;
      padding: 0px;
    }
    
    .oj-message-body {
      display: inline-flex;
      flex-direction: column;
      align-items: center;
      align-items: flex-start;
    }
    
    // Inline component messages also share this class
    .oj-message-summary {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true) {
        font-weight: var(--oj-message-summary-font-weight);
        color: var(--oj-message-summary-text-color);
        font-size: var(--oj-message-summary-font-size);
        line-height: var(--oj-message-summary-line-height);
      }
      @else {
        font-weight: $messageSummaryFontWeight;
        color: $messageSummaryTextColor;
        font-size: $messageSummaryFontSize;
        line-height: $messageSummaryLineHeight;
      }
      
      // usually a multi word text, set wrap at word ends
      word-wrap: break-word;
    }
    
    // Inline component messages also share this class
    .oj-message-detail {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true) {
        color: var(--oj-message-detail-text-color);
        font-size: var(--oj-message-detail-font-size);
        line-height: var(--oj-message-detail-line-height);
      }
      @else {
        color: $messageDetailTextColor;
        font-size: $messageDetailFontSize;
        line-height: $messageDetailLineHeight;
      }
      
      // usually a multi word text, set wrap at word ends
      word-wrap: break-word;
      width: 100%;
    }
    
    .oj-message-timestamp {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true) {
        color: var(--oj-message-time-text-color);
        font-size: var(--oj-message-time-font-size);
        text-align: right;
        html[dir="rtl"] & {
          text-align: left;
        }
      }
      @else {
        color: $messageTimeTextColor;
        font-size: $messageTimeFontSize;
        @include oj-bidi-property($property: 'text-align', $startOrEnd: end);
      }
      flex-grow: 9;
      
      // in worst case let it wrap at word ends so as to not overlap with category text
      word-wrap: break-word;
    }
    
    .oj-message-close {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true) {
        float: right;
        display: var(--oj-message-close-icon-display);
        html[dir="rtl"] & {
          float: left;
        }
      }
      @else {
        @include oj-bidi-property($property: 'float', $startOrEnd: end);
        display: $messageCloseIconDisplay;
      }
    }
    
    .oj-message-auto-timeout-close {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true) {
        display: var(--oj-message-auto-timeout-close-icon-display);
      }
      @else {
        display: $messageAutoTimeoutCloseIconDisplay;
      }
    }
    
    // button adds bottom margin of 4px, we dont want that when inside message
    .oj-message-close .oj-button {
      margin-bottom: 0;
    }
    
    // Theme defaults for properties
    //------------------------------

    $messageDefaults: ();

    @if ($messageAutoTimeoutOptionDefault != null) {
        $messageDefaults: map-merge($messageDefaults, (autoTimeout: $messageAutoTimeoutOptionDefault));
    }

    .oj-message-option-defaults {
        font-family: oj-json-from-map($messageDefaults);
    }
  }
}