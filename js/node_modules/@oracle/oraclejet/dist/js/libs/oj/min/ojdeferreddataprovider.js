/**
 * @license
 * Copyright (c) 2014, 2019, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 */
define(["ojs/ojcore","jquery","knockout","ojs/ojcomponentcore","ojs/ojeventtarget","ojs/ojdataprovider"],function(t,e,r){"use strict";var n=function(){function e(t,e){this._dataProvider=t,this._capabilityFunc=e,this._DATAPROVIDER="dataProvider",this.AsyncIterable=function(){return function(t){this._asyncIterator=t,this[Symbol.asyncIterator]=function(){return this._asyncIterator}}}(),this.AsyncIterator=function(){function t(t){this._asyncIteratorPromise=t}return t.prototype.next=function(){return this._asyncIteratorPromise.then(function(t){return t.next()})},t}()}return e.prototype.fetchFirst=function(t){var e=this._getDataProvider().then(function(e){return e.fetchFirst(t)[Symbol.asyncIterator]()});return new this.AsyncIterable(new this.AsyncIterator(e))},e.prototype.fetchByKeys=function(t){return this._getDataProvider().then(function(e){return e.fetchByKeys(t)})},e.prototype.containsKeys=function(t){return this._getDataProvider().then(function(e){return e.containsKeys(t)})},e.prototype.fetchByOffset=function(t){return this._getDataProvider().then(function(e){return e.fetchByOffset(t)})},e.prototype.getTotalSize=function(){return this._getDataProvider().then(function(t){return t.getTotalSize()})},e.prototype.isEmpty=function(){return this[this._DATAPROVIDER]?this[this._DATAPROVIDER].isEmpty():"unknown"},e.prototype.getCapability=function(t){return this._capabilityFunc?this._capabilityFunc(t):null},e.prototype.addEventListener=function(t,e){this._getDataProvider().then(function(r){r.addEventListener(t,e)})},e.prototype.removeEventListener=function(t,e){this._getDataProvider().then(function(r){r.removeEventListener(t,e)})},e.prototype.dispatchEvent=function(t){return!!this[this._DATAPROVIDER]&&this[this._DATAPROVIDER].dispatchEvent(t)},e.prototype._getDataProvider=function(){var e=this;return this._dataProvider.then(function(r){if(t.DataProviderFeatureChecker.isDataProvider(r))return e[e._DATAPROVIDER]||(e[e._DATAPROVIDER]=r),r;throw new Error("Invalid data type. DeferredDataProvider takes a Promise<DataProvider>")})},e}();return t.DeferredDataProvider=n,n});