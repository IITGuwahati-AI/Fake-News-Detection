define(["./impl/PersistenceXMLHttpRequest","./impl/PersistenceSyncManager","./impl/offlineCacheManager","./impl/logger","./impl/fetch"],function(a,b,c,d){"use strict";function e(){Object.defineProperty(this,"_registrations",{value:[],writable:!0}),Object.defineProperty(this,"_eventListeners",{value:[],writable:!0}),Object.defineProperty(this,"_forceOffline",{value:!1,writable:!0}),Object.defineProperty(this,"_isOffline",{value:!1,writable:!0}),Object.defineProperty(this,"_cache",{value:null,writable:!0}),Object.defineProperty(this,"_persistenceSyncManager",{value:new b(this.isOnline.bind(this),this.browserFetch.bind(this),this.getCache.bind(this))})}function f(a){var b=a;g()&&!b._addedBrowserEventListeners&&(d.log("Offline Persistence Toolkit PersistenceManager: Adding browser event listeners"),window.addEventListener("offline",function(a){b._isOffline=!0},!1),window.addEventListener("online",function(a){b._isOffline=!1},!1),b._addedBrowserEventListeners=!0)}function g(){return"undefined"!=typeof window&&null!=window}function h(a,b,c){var e,f,g,h,i,j=null,k=a._registrations,l=null!=k?k.length:0;for(e=0;e<l;e++)if(h=k[e],null!=c.request.url.match(h.scope)){for(i=h._eventListeners.length,f=0;f<i;f++)if(h._eventListeners[f].type==b)if("fetch"==b)null===j&&c._setPromiseCallbacks instanceof Function&&(j=new Promise(function(a,b){c._setPromiseCallbacks(a,b)})),d.log("Offline Persistence Toolkit PersistenceManager: Calling fetch event listener"),h._eventListeners[f].listener(c);else if(d.log("Offline Persistence Toolkit PersistenceManager: Calling event listener"),g=h._eventListeners[f].listener(c),g===!1)return!1;if(null!=j)return j}return!0}function i(a){var b=a;b._cache=c.open("systemCache")}function j(b){var c=b;!g()||c._browserFetchFunc||c._browserXMLHttpRequest||(d.log("Offline Persistence Toolkit PersistenceManager: Replacing browser APIs"),Object.defineProperty(c,"_browserFetchFunc",{value:window.fetch,writable:!1}),Object.defineProperty(c,"_browserXMLHttpRequest",{value:window.XMLHttpRequest,writable:!1}),window.fetch=m(b),window.XMLHttpRequest=function(){return null!=c._browserFetchRequest?new c._browserXMLHttpRequest:new a(c._browserXMLHttpRequest)})}function k(a,b){var c=a,d=c._registrations.indexOf(b);return d>-1&&(c._registrations.splice(d,1),!0)}function l(a,b){Object.defineProperty(this,"scope",{value:a,enumerable:!0}),Object.defineProperty(this,"_persistenceManager",{value:b}),Object.defineProperty(this,"_eventListeners",{value:[],writable:!0})}function m(a){function b(a){Object.defineProperty(this,"isReload",{value:!1,enumerable:!0}),Object.defineProperty(this,"clientId",{value:null,enumerable:!0}),Object.defineProperty(this,"client",{value:null,enumerable:!0}),Object.defineProperty(this,"request",{value:a,enumerable:!0}),Object.defineProperty(this,"_resolveCallback",{value:null,writable:!0}),Object.defineProperty(this,"_rejectCallback",{value:null,writable:!0})}return b.prototype.respondWith=function(a){var b=this;if(a instanceof Promise)a.then(function(a){b._resolveCallback(a)},function(a){b._rejectCallback(a)});else if("function"==typeof a){var c=a();b._resolveCallback(c)}},b.prototype._setPromiseCallbacks=function(a,b){this._resolveCallback=a,this._rejectCallback=b},function(c,d){var e;return e=Request.prototype.isPrototypeOf(c)&&!d?c:new Request(c,d),a.getRegistration(e.url).then(function(c){if(null!=c){var d=new b(e),f=h(a,"fetch",d);if(null!=f&&f instanceof Promise)return f}return a.browserFetch(e)})}}return e.prototype.init=function(){return j(this),f(this),i(this),Promise.resolve()},e.prototype.forceOffline=function(a){d.log("Offline Persistence Toolkit PersistenceManager: forceOffline is called with value: "+a),this._forceOffline=a},e.prototype.getCache=function(){return this._cache},e.prototype.isOnline=function(){var a=navigator.onLine;return navigator.network&&navigator.network.connection&&navigator.network.connection.type==Connection.NONE&&(a=!1,d.log("Offline Persistence Toolkit PersistenceManager: Cordova network info plugin is returning online value: "+a)),a&&!this._isOffline&&!this._forceOffline},e.prototype.register=function(a){a=a||{};var b=new l(a.scope,this);return this._registrations.push(b),Promise.resolve(b)},e.prototype.getRegistration=function(a){var b,c,d=this._registrations.length;for(b=0;b<d;b++)if(c=this._registrations[b],a.match(c.scope))return Promise.resolve(c);return Promise.resolve()},e.prototype.getRegistrations=function(){return Promise.resolve(this._registrations.slice())},e.prototype.getSyncManager=function(){return this._persistenceSyncManager},e.prototype.browserFetch=function(a){if(d.log("Offline Persistence Toolkit PersistenceManager: browserFetch() for Request with url: "+a.url),g()){Object.defineProperty(this,"_browserFetchRequest",{value:a,writable:!0});var b=this;return new Promise(function(c,e){d.log("Offline Persistence Toolkit PersistenceManager: Calling browser fetch function for Request with url: "+a.url),b._browserFetchFunc.call(window,a).then(function(a){c(a)},function(a){e(a)}),b._browserFetchRequest=null})}return fetch(a)},l.prototype.addEventListener=function(a,b){this._eventListeners.push({type:a.toLowerCase(),listener:b})},l.prototype.unregister=function(){return Promise.resolve(k(this._persistenceManager,this))},new e});