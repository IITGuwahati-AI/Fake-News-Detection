// Copyright (c) 2014, 2019, Oracle and/or its affiliates. The Universal Permissive License (UPL), Version 1.0
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// WARNING: do not directly import this file, instead import the
//          version in your base theme's directory,
//          for example alta/widgets/_oj.alta.utilities.scss
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

@import "../../utilities/oj.utilities";

@if $includeUtilitiesClasses != false {
  @include module-include-once("common.utilities") {

    // sizes

    .oj-text-xs {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        font-size: var(--oj-font-size-xs);
      }
      @else {
        font-size: $smallestFontSize;
      }
    }

    .oj-text-sm {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        font-size: var(--oj-font-size-sm);
      }
      @else {
        font-size: $smallFontSize;
      }
    }



    //colors

    .oj-text-primary-color {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        color: var(--oj-text-color-primary);
      }
      @else {
        color: $primaryTextColor;
      }
    }

    .oj-text-secondary-color {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        color: var(--oj-text-color-secondary);
      }
      @else {
        color: $secondaryTextColor;
      }
    }

    .oj-text-tertiary-color {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        color: var(--oj-text-color-tertiary);
      }
      @else {
        color: $tertiaryTextColor;
      }
    }

    .oj-text-disabled-color {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        color: var(--oj-text-color-disabled);
      }
      @else {
        color: $textColorDisabled;
      }
    }

    // contrast background
    .oj-contrast-marker .oj-contrast-background,
    .oj-contrast-marker.oj-contrast-background {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        background-color: var(--oj-contrast-background-1-color);
        color: var(--oj-text-color-contrast)
      }
      @else {
        background-color: $contrastBackground1Color;
        color: $contrastTextColor;
      }

    }





/* as of jet 4.0 oj-margin* and oj-padding* are deprecated in favor of responsive versions of these classes */
    // margins
    .oj-margin {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        margin: var(--oj-spacing-2x);
      }
      @else {
        margin: $spacingMedium;
      }
    }

    .oj-margin-horizontal {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        margin-left: var(--oj-spacing-2x);
        margin-right: var(--oj-spacing-2x);
      }
      @else {
        margin-left: $spacingMedium;
        margin-right: $spacingMedium;
      }
    }

    .oj-margin-vertical {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        margin-top: var(--oj-spacing-2x);
        margin-bottom: var(--oj-spacing-2x);
      }
      @else {
        margin-top: $spacingMedium;
        margin-bottom: $spacingMedium;
      }
    }

    .oj-margin-top {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        margin-top: var(--oj-spacing-2x);
      }
      @else {
        margin-top: $spacingMedium;
      }
    }

    .oj-margin-bottom {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        margin-bottom: var(--oj-spacing-2x);
      }
      @else {
        margin-bottom: $spacingMedium;
      }
    }

    .oj-margin-start {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        @include oj-ltr() {
          margin-left: var(--oj-spacing-2x);
        }
        @include oj-rtl() {
          margin-right: var(--oj-spacing-2x);
        }
      }
      @else {
        @include oj-ltr() {
          margin-left: $spacingMedium;
        }
        @include oj-rtl() {
          margin-right: $spacingMedium;
        }
      }

    }

    .oj-margin-end {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        @include oj-ltr() {
          margin-right: var(--oj-spacing-2x);
        }
        @include oj-rtl() {
          margin-left: var(--oj-spacing-2x);
        }
      }
      @else {
        @include oj-ltr() {
          margin-right: $spacingMedium;
        }
        @include oj-rtl() {
          margin-left: $spacingMedium;
        }
      }

    }

    // margins
    .oj-margin-lg {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        margin: var(--oj-spacing-4x);
      }
      @else {
        margin: $spacingLarge;
      }
    }

    .oj-margin-lg-horizontal {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        margin-left: var(--oj-spacing-4x);
        margin-right: var(--oj-spacing-4x);
      }
      @else {
        margin-left: $spacingLarge;
        margin-right: $spacingLarge;
      }
    }

    .oj-margin-lg-vertical {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        margin-top: var(--oj-spacing-4x);
        margin-bottom: var(--oj-spacing-4x);
      }
      @else {
        margin-top: $spacingLarge;
        margin-bottom: $spacingLarge;
      }

    }

    .oj-margin-lg-top {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        margin-top: var(--oj-spacing-4x);
      }
      @else {
        margin-top: $spacingLarge;
      }
    }

    .oj-margin-lg-bottom {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        margin-bottom: var(--oj-spacing-4x);
      }
      @else {
        margin-bottom: $spacingLarge;
      }
    }

    .oj-margin-lg-start {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        @include oj-ltr() {
          margin-left: var(--oj-spacing-4x);
        }
        @include oj-rtl() {
          margin-right: var(--oj-spacing-4x);
        }
      }
      @else {
        @include oj-ltr() {
          margin-left: $spacingLarge;
        }
        @include oj-rtl() {
          margin-right: $spacingLarge;
        }
      }

    }

    .oj-margin-lg-end {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        @include oj-ltr() {
          margin-right: var(--oj-spacing-4x);
        }
        @include oj-rtl() {
          margin-left: var(--oj-spacing-4x);
        }
      }
      @else {
        @include oj-ltr() {
          margin-right: $spacingLarge;
        }
        @include oj-rtl() {
          margin-left: $spacingLarge;
        }
      }

    }




    // padding
    .oj-padding {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        padding: var(--oj-spacing-2x);
      }
      @else {
        padding: $spacingMedium;
      }
    }

    .oj-padding-horizontal {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        padding-left: var(--oj-spacing-2x);
        padding-right: var(--oj-spacing-2x);
      }
      @else {
        padding-left: $spacingMedium;
        padding-right: $spacingMedium;
      }

    }

    .oj-padding-vertical {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        padding-top: var(--oj-spacing-2x);
        padding-bottom: var(--oj-spacing-2x);
      }
      @else {
        padding-top: $spacingMedium;
        padding-bottom: $spacingMedium;
      }

    }

    .oj-padding-top {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        padding-top: var(--oj-spacing-2x);
      }
      @else {
        padding-top: $spacingMedium;
      }
    }

    .oj-padding-bottom {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        padding-bottom: var(--oj-spacing-2x);
      }
      @else {
        padding-bottom: $spacingMedium;
      }
    }

    .oj-padding-start {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        @include oj-ltr() {
          padding-left: var(--oj-spacing-2x);
        }
        @include oj-rtl() {
          padding-right: var(--oj-spacing-2x);
        }
      }
      @else {
        @include oj-ltr() {
          padding-left: $spacingMedium;
        }
        @include oj-rtl() {
          padding-right: $spacingMedium;
        }
      }

    }

    .oj-padding-end {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        @include oj-ltr() {
          padding-right: var(--oj-spacing-2x);
        }
        @include oj-rtl() {
          padding-left: var(--oj-spacing-2x);
        }
      }
      @else {
        @include oj-ltr() {
          padding-right: $spacingMedium;
        }
        @include oj-rtl() {
          padding-left: $spacingMedium;
        }
      }

    }


    // padding
    .oj-padding-lg {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        padding: var(--oj-spacing-4x);
      }
      @else {
        padding: $spacingLarge;
      
      }
    }

    .oj-padding-lg-horizontal {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        padding-left: var(--oj-spacing-4x);
        padding-right: var(--oj-spacing-4x);
      }
      @else {
        padding-left: $spacingLarge;
        padding-right: $spacingLarge;
      }
    }

    .oj-padding-lg-vertical {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        padding-top: var(--oj-spacing-4x);
        padding-bottom: var(--oj-spacing-4x);
      }
      @else {
        padding-top: $spacingLarge;
        padding-bottom: $spacingLarge;
      }

    }

    .oj-padding-lg-top {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        padding-top: var(--oj-spacing-4x);
      }
      @else {
        padding-top: $spacingLarge;
      }
    }

    .oj-padding-lg-bottom {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        padding-bottom: var(--oj-spacing-4x);
      }
      @else {
        padding-bottom: $spacingLarge;
      }
    }

    .oj-padding-lg-start {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        @include oj-ltr() {
          padding-left: var(--oj-spacing-4x);
        }
        @include oj-rtl() {
          padding-right: var(--oj-spacing-4x);
        }
      }
      @else {
        @include oj-ltr() {
          padding-left: $spacingLarge;
        }
        @include oj-rtl() {
          padding-right: $spacingLarge;
        }
      }

    }

    .oj-padding-lg-end {
      @if (variable-exists(outputOnlyCssVars) and $outputOnlyCssVars == true)
      {
        @include oj-ltr() {
          padding-right: var(--oj-spacing-4x);
        }
        @include oj-rtl() {
          padding-left: var(--oj-spacing-4x);
        }
      }
      @else {
        @include oj-ltr() {
          padding-right: $spacingLarge;
        }
        @include oj-rtl() {
          padding-left: $spacingLarge;
        }
      }
    }

  }
}
